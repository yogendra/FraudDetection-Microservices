buildscript {
	ext {
		springBootVersion = '1.5.1.RELEASE'
	}
	repositories {
		mavenCentral()
		flatDir dir: "${projectDir}/gradle/plugins"
		
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}") 
		classpath("io.spring.gradle:dependency-management-plugin:0.5.6.RELEASE")		
	}
}

apply plugin: 'scala'
apply plugin: 'eclipse'
apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: "io.spring.dependency-management"

ScalaCompileOptions.metaClass.daemonServer = true
ScalaCompileOptions.metaClass.fork = true
ScalaCompileOptions.metaClass.useAnt = false
ScalaCompileOptions.metaClass.useCompileDaemon = false


sourceCompatibility = 1.8
targetCompatibility = 1.8
version = '1.0'

sourceSets.main.scala.srcDir "src/main/java"
sourceSets.main.java.srcDirs = []



def scalaVersion = '2.10.6'

jar {
    manifest {
        attributes 'Main-Class': 'io.pivotal.demo.ClusterTrainingApp'
    }
}


repositories {
    mavenCentral()
    mavenLocal()
    maven { url "https://repo.spring.io/libs-release/" }
    maven { url "https://repo.spring.io/libs-snapshot/" }
    maven { url "http://repo.spring.io/milestone" }
}

configurations {
    idea {
        transitive = true
    }
}


dependencies {
    
    compile "org.scala-lang:scala-library:$scalaVersion"
    
    compile ('org.apache.spark:spark-core_2.10:1.6.0'){
    	exclude group: 'com.fasterxml.jackson.core'
		exclude group: 'com.fasterxml.jackson.module'
		exclude group: 'org.slf4j'
		exclude group: 'org.eclipse.jetty.orbit'
	}
    
    
	compile ('org.apache.spark:spark-mllib_2.10:1.6.0'){
    	exclude group: 'com.fasterxml.jackson.core'
		exclude group: 'com.fasterxml.jackson.module'
		exclude group: 'org.slf4j'
		exclude group: 'org.eclipse.jetty.orbit'
	}
	
	compile('org.springframework.boot:spring-boot-starter-web'){
		exclude group: 'com.fasterxml.jackson.core'
		exclude (group: 'org.springframework.boot', module: 'spring-boot-starter-logging')
		 
	}

	compile ('com.fasterxml.jackson.core:jackson-databind:2.6.5')
	
	compile ('com.fasterxml.jackson.module:jackson-module-scala_2.10:2.6.5')
	
	compile ('postgresql:postgresql:9.1-901-1.jdbc4')
	
	compile ('com.databricks:spark-csv_2.10:1.4.0')
	


	compile ('org.springframework.boot:spring-boot-starter-logging')

	compile('org.springframework.boot:spring-boot-starter-data-redis'){
		exclude group: 'com.fasterxml.jackson.core'
	}


	compile ('com.redislabs:spark-redis:2.4.0'){
    	exclude group: 'org.slf4j'	
		exclude group: 'org.scala-lang'
		exclude group: 'org.apache.spark'	
	}
	

	compile ('org.springframework.cloud:spring-cloud-spring-service-connector:1.2.2.RELEASE')
	compile ('org.springframework.cloud:spring-cloud-cloudfoundry-connector:1.2.2.RELEASE')
		
}


eclipse {
	classpath {
		 containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
		 containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
	}
}


tasks.withType(ScalaCompile) {
    scalaCompileOptions.useAnt = false
}



